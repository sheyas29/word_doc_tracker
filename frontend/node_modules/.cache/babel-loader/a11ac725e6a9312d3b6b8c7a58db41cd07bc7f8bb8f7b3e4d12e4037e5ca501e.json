{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kshre\\\\OneDrive\\\\Desktop\\\\word-doc-project\\\\frontend\\\\src\\\\FormattedTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport './FormattedTable.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormattedTable = () => {\n  _s();\n  const location = useLocation();\n  const {\n    data,\n    boldRows,\n    checkboxRows\n  } = location.state;\n  const [checkedRows, setCheckedRows] = useState([]); // Initialize as empty array\n\n  const handleCheckboxClick = index => {\n    setCheckedRows(prevCheckedRows => {\n      if (prevCheckedRows.includes(index)) {\n        return prevCheckedRows.filter(i => i !== index);\n      } else {\n        return [...prevCheckedRows, index];\n      }\n    });\n  };\n  const totalCheckboxRows = checkboxRows.length;\n  const checkedCount = checkedRows.filter(index => checkboxRows.includes(index)).length;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"formatted-table-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Hrs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Min\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Sec\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Si. No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Activity Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Confirmed By\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Check\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          style: {\n            fontWeight: boldRows.includes(index) ? 'bold' : 'normal'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.hrs\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.mins\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.sec\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row['si.no']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.activity_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.confirmed_by\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: checkboxRows.includes(index) && /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: checkedRows.includes(index),\n              onChange: () => handleCheckboxClick(index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Progress:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"progress\", {\n        value: checkedCount / totalCheckboxRows * 100,\n        max: \"100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(FormattedTable, \"4vS1Nd+hqHMiQFNXRK50Ug0+pJw=\", false, function () {\n  return [useLocation];\n});\n_c = FormattedTable;\nexport default FormattedTable;\nvar _c;\n$RefreshReg$(_c, \"FormattedTable\");","map":{"version":3,"names":["React","useState","useLocation","jsxDEV","_jsxDEV","FormattedTable","_s","location","data","boldRows","checkboxRows","state","checkedRows","setCheckedRows","handleCheckboxClick","index","prevCheckedRows","includes","filter","i","totalCheckboxRows","length","checkedCount","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","row","style","fontWeight","hrs","mins","sec","activity_name","confirmed_by","type","checked","onChange","value","max","_c","$RefreshReg$"],"sources":["C:/Users/kshre/OneDrive/Desktop/word-doc-project/frontend/src/FormattedTable.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport './FormattedTable.css';\r\n\r\nconst FormattedTable = () => {\r\n    const location = useLocation();\r\n    const { data, boldRows, checkboxRows } = location.state;\r\n    const [checkedRows, setCheckedRows] = useState([]); // Initialize as empty array\r\n\r\n    const handleCheckboxClick = (index) => {\r\n        setCheckedRows((prevCheckedRows) => {\r\n            if (prevCheckedRows.includes(index)) {\r\n                return prevCheckedRows.filter((i) => i !== index);\r\n            } else {\r\n                return [...prevCheckedRows, index];\r\n            }\r\n        });\r\n    };\r\n\r\n    const totalCheckboxRows = checkboxRows.length;\r\n    const checkedCount = checkedRows.filter(index => checkboxRows.includes(index)).length;\r\n\r\n    return (\r\n        <div className=\"formatted-table-container\">\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Hrs</th>\r\n                        <th>Min</th>\r\n                        <th>Sec</th>\r\n                        <th>Si. No</th>\r\n                        <th>Activity Name</th>\r\n                        <th>Confirmed By</th>\r\n                        <th>Check</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {data.map((row, index) => (\r\n                        <tr key={index} style={{ fontWeight: boldRows.includes(index) ? 'bold' : 'normal' }}>\r\n                            <td>{row.hrs}</td>\r\n                            <td>{row.mins}</td>\r\n                            <td>{row.sec}</td>\r\n                            <td>{row['si.no']}</td>\r\n                            <td>{row.activity_name}</td>\r\n                            <td>{row.confirmed_by}</td>\r\n                            <td>\r\n                                {checkboxRows.includes(index) && (\r\n                                    <input \r\n                                        type=\"checkbox\" \r\n                                        checked={checkedRows.includes(index)} \r\n                                        onChange={() => handleCheckboxClick(index)}\r\n                                    />\r\n                                )}\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n            <div className=\"progress-container\">\r\n                <label>Progress:</label>\r\n                <progress value={(checkedCount / totalCheckboxRows) * 100} max=\"100\"></progress>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FormattedTable;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEM,IAAI;IAAEC,QAAQ;IAAEC;EAAa,CAAC,GAAGH,QAAQ,CAACI,KAAK;EACvD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEpD,MAAMa,mBAAmB,GAAIC,KAAK,IAAK;IACnCF,cAAc,CAAEG,eAAe,IAAK;MAChC,IAAIA,eAAe,CAACC,QAAQ,CAACF,KAAK,CAAC,EAAE;QACjC,OAAOC,eAAe,CAACE,MAAM,CAAEC,CAAC,IAAKA,CAAC,KAAKJ,KAAK,CAAC;MACrD,CAAC,MAAM;QACH,OAAO,CAAC,GAAGC,eAAe,EAAED,KAAK,CAAC;MACtC;IACJ,CAAC,CAAC;EACN,CAAC;EAED,MAAMK,iBAAiB,GAAGV,YAAY,CAACW,MAAM;EAC7C,MAAMC,YAAY,GAAGV,WAAW,CAACM,MAAM,CAACH,KAAK,IAAIL,YAAY,CAACO,QAAQ,CAACF,KAAK,CAAC,CAAC,CAACM,MAAM;EAErF,oBACIjB,OAAA;IAAKmB,SAAS,EAAC,2BAA2B;IAAAC,QAAA,gBACtCpB,OAAA;MAAAoB,QAAA,gBACIpB,OAAA;QAAAoB,QAAA,eACIpB,OAAA;UAAAoB,QAAA,gBACIpB,OAAA;YAAAoB,QAAA,EAAI;UAAG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACZxB,OAAA;YAAAoB,QAAA,EAAI;UAAG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACZxB,OAAA;YAAAoB,QAAA,EAAI;UAAG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACZxB,OAAA;YAAAoB,QAAA,EAAI;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACfxB,OAAA;YAAAoB,QAAA,EAAI;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACtBxB,OAAA;YAAAoB,QAAA,EAAI;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACrBxB,OAAA;YAAAoB,QAAA,EAAI;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACd;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACRxB,OAAA;QAAAoB,QAAA,EACKhB,IAAI,CAACqB,GAAG,CAAC,CAACC,GAAG,EAAEf,KAAK,kBACjBX,OAAA;UAAgB2B,KAAK,EAAE;YAAEC,UAAU,EAAEvB,QAAQ,CAACQ,QAAQ,CAACF,KAAK,CAAC,GAAG,MAAM,GAAG;UAAS,CAAE;UAAAS,QAAA,gBAChFpB,OAAA;YAAAoB,QAAA,EAAKM,GAAG,CAACG;UAAG;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAClBxB,OAAA;YAAAoB,QAAA,EAAKM,GAAG,CAACI;UAAI;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACnBxB,OAAA;YAAAoB,QAAA,EAAKM,GAAG,CAACK;UAAG;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAClBxB,OAAA;YAAAoB,QAAA,EAAKM,GAAG,CAAC,OAAO;UAAC;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACvBxB,OAAA;YAAAoB,QAAA,EAAKM,GAAG,CAACM;UAAa;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC5BxB,OAAA;YAAAoB,QAAA,EAAKM,GAAG,CAACO;UAAY;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC3BxB,OAAA;YAAAoB,QAAA,EACKd,YAAY,CAACO,QAAQ,CAACF,KAAK,CAAC,iBACzBX,OAAA;cACIkC,IAAI,EAAC,UAAU;cACfC,OAAO,EAAE3B,WAAW,CAACK,QAAQ,CAACF,KAAK,CAAE;cACrCyB,QAAQ,EAAEA,CAAA,KAAM1B,mBAAmB,CAACC,KAAK;YAAE;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9C;UACJ;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC;QAAA,GAfAb,KAAK;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAgBV,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACRxB,OAAA;MAAKmB,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBAC/BpB,OAAA;QAAAoB,QAAA,EAAO;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACxBxB,OAAA;QAAUqC,KAAK,EAAGnB,YAAY,GAAGF,iBAAiB,GAAI,GAAI;QAACsB,GAAG,EAAC;MAAK;QAAAjB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/E,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACtB,EAAA,CA5DID,cAAc;EAAA,QACCH,WAAW;AAAA;AAAAyC,EAAA,GAD1BtC,cAAc;AA8DpB,eAAeA,cAAc;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}